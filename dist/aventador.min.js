!function(e,t){"use strict";e.args=function(){function e(e,r,i){var e=e||!1,r=r||!1,i=i||!1,s={errors:{},passed:!0};if(e===!1)throw new n("Function arguments is required. \n\nFor more info, go to "+o+"#api");if(e.constructor!==Object)throw new n("Function arguments must be an instance of a function's arguments.\n\nFor more info, go to "+o+"#api");if(r===!1||r.length<1)throw new n("Expectations are required.\n\nFor more info, go to "+o+"#api");if(r.constructor!==Array)throw new n("Expectations must be an array of string expectations, "+typeof r+" was passed.\n\nFor more info, go to "+o+"#api");for(var a=0;a<=r.length-1;a++){if("string"!=typeof r[a])throw new n("Expectations must only contain valid string expectations, "+typeof r[a]+" was detected - `"+r[a]+"`. \n\nFor more info, go to "+o+"#api");for(var u=r[a].split("|"),f=0;f<=u.length-1;f++)if(!t(u[f]))throw new n("A malformed string of expectation was detected - `"+u[f]+"`. \n\nFor more info, go to "+o+"#api")}if(e.length<1)throw new n("There we're no arguments passed. Function expects arguments to be: ("+r.toString().split(",").join(", ")+"). \n\nFor more info, go to "+o+"#api");if(e.length!==r.length)throw new n("The number of function arguments does not match the number of expected arguments. \n\nFor more info, go to "+o+"#api");for(var a=0;a<=e.length-1;a++){var u=r[a].split("|");if(-1===u.indexOf("*")&&-1===u.indexOf(typeof e[a])){var c="Argument number "+(a+1)+" must be "+r[a]+", "+typeof e[a]+" was passed.";if(s.passed=!1,s.errors["argument "+(a+1)]={passedData:e[a],passedDataType:typeof e[a],expects:u,message:c},i===!1)throw new n(c+"\n\nFor more info, go to "+o+"#api")}}if(i!==!1){if("function"!=typeof i)throw new n("Callback function must be a function, "+typeof i+" was passed. \n\nFor more info, go to "+o+"#api");i(s)}return s.passed}function t(e){return-1!==["object","function","string","number","boolean","*"].indexOf(e)}function n(e){this.name="ArgumentException",this.message=e,this.toString=function(){return this.name+": "+this.message}}var o="http://www.github.com/karlpatrickespiritu/args-checker-js";return{expect:e,ArgumentException:n}}()}(window="undefined"!=typeof window?window:{},void 0),"undefined"!=typeof exports&&(exports.args=window.args||{}),function(e,t){"use strict";var n={data:{isString:function(e){return"string"==typeof e},isDefined:function(e){return"undefined"!=typeof e},isFunction:function(e){return"function"==typeof e},isArray:function(e){return e.constructor===Array}},array:{exists:function(e,t){return-1!==t.indexOf(e)},getIndex:function(e,t){return t.indexOf(e)}},obj:{keyExists:function(e,t){return n.data.isDefined(t[e])}},string:{upperCaseFirst:function(e){return e.charAt(0).toUpperCase()+e.slice(1)},upperCaseWords:function(e){for(var t=e.split(" "),o=0;o<=t.length-1;o++)t[o]=n.string.upperCaseFirst(t[o]);return t.join(" ")}}},o=function(e,n){function o(e){return n.expect(arguments,["string"]),d.keyExists(e,c.modules)||(c.modules[e]={}),c.activeModule=e,s(),{_app:c,controller:r,service:a,utility:u,model:f}}function r(e,t){n.expect(arguments,["string","function"]);for(var o=i(t),r=c.modules[c.activeModule],s=0;s<=o.length-1;s++)d.keyExists(o[s],r.controllers);return r.controllers[e]=t(),this}function i(e){return n.expect(arguments,["function"]),e.toString().match(/^function\s*[^\(]*\(\s*([^\)]*)\)/m)[1].replace(/ /g,"").split(",")}function s(){var e=c.modules[c.activeModule];d.keyExists("controllers",c.modules[c.activeModule])||(e.controllers={}),d.keyExists("models",c.modules[c.activeModule])||(e.models={}),d.keyExists("services",c.modules[c.activeModule])||(e.services={}),d.keyExists("utilities",c.modules[c.activeModule])||(e.utilities={})}function a(){}function u(){}function f(){}var c={activeModule:t,modules:{}},d=(e.data,e.array,e.obj);e.string;return{module:o,helpers:e}}(n,e.args);e.aventador=o}(window="undefined"!=typeof window?window:{},void 0),"undefined"!=typeof exports&&(exports.aventador=window.aventador||{});